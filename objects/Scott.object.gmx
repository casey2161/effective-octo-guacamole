<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.fire_rate = 15;

self.cooldown = self.fire_rate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    
    var lr, ud;
    
    var vel = 4;
    if (inv_get("boots") &gt;= 1) {
        vel = 16;
    }
    
    lr = keyboard_check(ord('D')) - keyboard_check(ord('A')) 
    ud = keyboard_check(ord('S')) - keyboard_check(ord('W'));
    x += lr * vel;
    y += ud * vel;
    
    
    
    if (lr!=0) {
        if (ud != 0) {
            sprite_index = spr_runVert;
        } else {
            sprite_index = spr_runHoriz;
        }
    } else if (ud!=0) {
        sprite_index = spr_runVert;
    } else {
        sprite_index = spr_test;
    }
    
    
    //wall collision
    if (x &lt; 0) {
        x = 0;
    }
    if (y &lt; 0) {
        y = 0;
    }
    if (x &gt; room_width - sprite_width) {
        x = room_width - sprite_width;
    }
    if (y &gt; room_height - sprite_width) {
        y = room_height - sprite_width;
    }
    
    //bullet firing
    var dir, make_obj;
    make_obj = true;
    if (keyboard_check(vk_left)) {
        dir = 180;
    } else if (keyboard_check(vk_up)) {
        dir = 90;
    } else if (keyboard_check(vk_right)) {
        dir = 0;
    } else if (keyboard_check(vk_down)) {
        dir = 270;
    } else {
        make_obj = false;
    }

    if (make_obj &amp;&amp; self.cooldown &lt; 0) {
        self.cooldown = self.fire_rate;
        inst = instance_create(x, y, bullet);
        with (inst) {
            speed = 4;
            direction = dir;
        }
    }
    self.cooldown -= 1;
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
